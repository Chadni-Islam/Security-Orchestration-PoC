<?xml version="1.0"?>
<rdf:RDF xmlns="http://webprotege.stanford.edu/project/9IGcjK9vvio5JEOpQErQJE#"
     xml:base="http://webprotege.stanford.edu/project/9IGcjK9vvio5JEOpQErQJE"
     xmlns:MidsocOntology="http://webprotege.stanford.edu/project/MidsocOntology#"
     xmlns:webprotege="http://webprotege.stanford.edu/"
     xmlns:SOAROntology="http://webprotege.stanford.edu/project/SOAROntology#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#">
    <owl:Ontology rdf:about="http://webprotege.stanford.edu/project/SOAROntology"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Datatypes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#stringArray -->

    <rdfs:Datatype rdf:about="http://webprotege.stanford.edu/project/SOAROntology#stringArray"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://webprotege.stanford.edu/hasException -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/hasException">
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/FunctionException"/>
        <rdfs:label xml:lang="en">hasException</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/hasFunctionalRequirement -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/hasFunctionalRequirement">
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <rdfs:label xml:lang="en">hasFunctionalRequirement</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/hasInput -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/hasInput">
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <rdfs:label xml:lang="en">hasInput</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/hasInputType -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/hasInputType">
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/VariableType"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#OperatingSystem"/>
        <rdfs:label xml:lang="en">hasInputType</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/hasNonFuncRequirement -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/hasNonFuncRequirement">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/NonFuncRequirement"/>
        <rdfs:label xml:lang="en">hasNonFuncRequirement</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/hasReturnType -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/hasReturnType">
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AsymmetricProperty"/>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/VariableType"/>
        <rdfs:label xml:lang="en">hasReturnType</rdfs:label>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#CapabilityOf -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#CapabilityOf">
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Capability"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#functionalCapOf -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#functionalCapOf">
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#hasCapability -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#hasCapability">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Capability"/>
    </owl:ObjectProperty>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#hasOperatingMode -->

    <owl:ObjectProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#hasOperatingMode">
        <rdfs:subPropertyOf rdf:resource="http://www.w3.org/2002/07/owl#topObjectProperty"/>
        <rdfs:domain rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#InputSnort"/>
        <rdfs:range rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#hasArgumentForProcess -->

    <owl:DatatypeProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#hasArgumentForProcess">
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
    </owl:DatatypeProperty>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#hasArgumentOrder -->

    <owl:DatatypeProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#hasArgumentOrder">
        <rdfs:comment>Order of arguments to be passed to the implementation function (E.g. the order as defined by the function signature)</rdfs:comment>
    </owl:DatatypeProperty>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#hasCommand -->

    <owl:DatatypeProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#hasCommand">
        <rdfs:range rdf:resource="http://www.w3.org/2001/XMLSchema#string"/>
        <rdfs:comment>Simple command to execute function - use this or use &apos;hasImplementFile&apos; ?</rdfs:comment>
    </owl:DatatypeProperty>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#hasImplementFile -->

    <owl:DatatypeProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#hasImplementFile">
        <rdfs:comment>Path to file that stores code that implements the function for that specific tool. E.g. &apos;How LimaCharlie implements the generic KillProcess interface function&apos;</rdfs:comment>
    </owl:DatatypeProperty>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#hasImplementation -->

    <owl:DatatypeProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#hasImplementation"/>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#hasOutputType -->

    <owl:DatatypeProperty rdf:about="http://webprotege.stanford.edu/project/SOAROntology#hasOutputType"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://webprotege.stanford.edu/FunctionException -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/FunctionException">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <rdfs:label xml:lang="en">FunctionException</rdfs:label>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/InputOutput -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/InputOutput">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/NonFuncRequirement"/>
        <rdfs:label xml:lang="en">InputOutput</rdfs:label>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/NonFuncRequirement -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/NonFuncRequirement">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Capability"/>
        <rdfs:label xml:lang="en">NonFuncRequirement</rdfs:label>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/SecurityTool -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/SecurityTool">
        <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
        <rdfs:label xml:lang="en">SecurityTool</rdfs:label>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/VariableType -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/VariableType">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/NonFuncRequirement"/>
        <rdfs:label xml:lang="en">VariableType</rdfs:label>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Activity -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Activity"/>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Alert -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Alert">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Event"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#AlertCorrelation -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#AlertCorrelation">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#AlertGeneration -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#AlertGeneration">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#AlertVisualization -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#AlertVisualization">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Capability -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Capability"/>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#CollectAlertLog -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#CollectAlertLog">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Activity"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#DetectIncident -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#DetectIncident">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Activity"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#DetectionRule -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#DetectionRule">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#EDR -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#EDR">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Event -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Event"/>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#EventManagement -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#EventManagement">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#EventMonirtoring -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#EventMonirtoring">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#FileDeletion -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#FileDeletion">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#FileFetching -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#FileFetching">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#InformationFecthing"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#FileIntegrityMonitoring -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#FileIntegrityMonitoring">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#FileUploading -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#FileUploading">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Firewall -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Firewall">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Capability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#GenerateIncidentReport -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#GenerateIncidentReport">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Activity"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#IDS -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#IDS">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedSystem -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedSystem">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Activity"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Incident -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Incident">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Event"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#InformationFecthing -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#InformationFecthing">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#InformationStoring -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#InformationStoring">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Input -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Input">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#InputSnort -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#InputSnort">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Input"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#InstrusionDetection -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#InstrusionDetection">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#LimaCharlie -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#LimaCharlie">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#EDR"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Log -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Log">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Event"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#LogAnalysis -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#LogAnalysis">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#LogCollection -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#LogCollection">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#LogManagement -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#LogManagement">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#MISP -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#MISP">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#OSINT"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Network -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Network">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/NonFuncRequirement"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#NodeIsolation -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#NodeIsolation">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#NodeRejoining -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#NodeRejoining">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#OSINT -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#OSINT">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#OperatingSystem -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#OperatingSystem">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/NonFuncRequirement"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Output -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Output">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#OutputSnort -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#OutputSnort">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Output"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#PacketAnalysis -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#PacketAnalysis">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#PacketAnalyzer -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#PacketAnalyzer">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#PacketCapture -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#PacketCapture">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#PacketLogging -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#PacketLogging">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#PacketSniffing -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#PacketSniffing">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#PaloAltoFirewall -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#PaloAltoFirewall">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Firewall"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#ProcessFecthing -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#ProcessFecthing">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#InformationFecthing"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#ProcessKilling -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#ProcessKilling">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#ReportGeneration -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#ReportGeneration">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#ReportRunning -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#ReportRunning">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#SIEM -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#SIEM">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/SecurityTool"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Snort -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Snort">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#IDS"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Splunk -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Splunk">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#SIEM"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#WinPcap -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#WinPcap">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#PacketCapture"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#WindowDefender -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#WindowDefender">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Firewall"/>
    </owl:Class>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Wireshark -->

    <owl:Class rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Wireshark">
        <rdfs:subClassOf rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#PacketAnalyzer"/>
    </owl:Class>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Individuals
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://webprotege.stanford.edu/ClassifierPredict -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/ClassifierPredict">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <SOAROntology:hasCommand>python3 ~/MISP-Classifier/MISP-Classifier/classify_data.py $outputFilePath $inputFilePath</SOAROntology:hasCommand>
        <rdfs:comment>Example usage:
python3 classify_data.py output/asn_owner_country_attrdate_comment_netRatio_payRatio_extRatio_artRatio_miscRatio_blacklist-rid-threat_actor.sav example_input.csv</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/ClassifierTrain -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/ClassifierTrain">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <SOAROntology:hasCommand>python3 ~/MISP-Classifier/MISP-Classifier/classifier.py $features $algorithm $label</SOAROntology:hasCommand>
        <rdfs:comment>Example usage:    
python3 classifier.py &quot;asn owner country attr_date comment netRatio payRatio extRatio artRatio miscRatio blacklist&quot; rid tools</rdfs:comment>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/Connect -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/Connect">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/RuntimeException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/filePath"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;filePath&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>connect</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation xml:lang="Override
  public boolean connect(String fileName) throws RuntimeException, IOException {

    // Extract credentials from fileName
    HashMap&lt;String, String&gt; credentials = getCredentials(fileName);
    String username = credentials.get(&quot;USERNAME&quot;);
    String password = credentials.get(&quot;PASSWORD&quot;);
    String host = credentials.get(&quot;HOST&quot;);
    String portStr = credentials.get(&quot;PORT&quot;);
    int port = Integer.parseInt(portStr);

    // Set up args for connection
    ServiceArgs loginArgs = new ServiceArgs();
    loginArgs.setUsername(username);
    loginArgs.setPassword(password);
    loginArgs.setHost(host);
    loginArgs.setPort(port);
    loginArgs.setSSLSecurityProtocol(SSLSecurityProtocol.TLSv1_2);
    loginArgs.setScheme(&quot;https&quot;);

    // Connect to Splunk server
    try {
      service = Service.connect(loginArgs);
    } catch (RuntimeException e) {
      throw new RuntimeException(e);
    }

    return true;
}">/**
   * Connect to Splunk instance
   *
   * @param fileName path to JSON file that includes Splunk login credentials. This includes keys &quot;USERNAME&quot;, &quot;PASSWORD&quot;, &quot;HOST&quot;, and &quot;PORT&quot;
   * @return true if successfully connected
   * @throws RuntimeException if failed to connect
   * @throws IOException if credentials file cannot be read
   */
  </SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment xml:lang="throws ioexception if credentials file cannot be read">Connect to Splunk instance
@param credentialsPath path to JSON file that includes Splunk login credentials. This includes keys &quot;USERNAME&quot;, &quot;PASSWORD&quot;, &quot;HOST&quot;, and &quot;PORT&quot;
@return true if successfully connected
@throws RuntimeException if failed to connect
</rdfs:comment>
        <rdfs:label xml:lang="en">Connect</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/Correlate -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/Correlate">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IllegalArgumentException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/dependent"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/independents"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;Dependent&quot;, &quot;Independents&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>correlate</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation xml:lang="Override
  public double[] correlate(String dependent, String[] independents)
      throws IllegalArgumentException {
    return null;
}">/**
   * Perform correlation on independent variables and dependent variable
   *
   * @param dependent dependent variable to correlate against
   * @param independents list of independent variables to determine correlation coefficient
   * @return null always
   * @throws IllegalArgumentException does not currently throw
   */
  </SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>double[]</SOAROntology:hasOutputType>
        <rdfs:comment xml:lang="throws illegalargumentexception does not currently throw ‘correlate’ is a search command.  the ‘double’ it returns is a correlation value between 0.0 and 1.0 (no correlation vs total correlation)">Perform correlation on independent variables and dependent variable
@param dependent dependent variable to correlate against
@param independents list of independent variables to determine correlation coefficient
@return null always
</rdfs:comment>
        <rdfs:label xml:lang="en">Correlate</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/DeleteFile -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/DeleteFile">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/filePath"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/sensorId"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnLinux_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnOSX_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnWindows_LC"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;sensorId&quot;, &quot;fileName&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>python lc.py &quot;file_del $filePath&quot; $sensorId</SOAROntology:hasCommand>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment>Deletes a file on an endpoint

-identifier: identifies the endpoint
-filename: the file to be deleted
-returns:  true if successful, else false</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string">DeleteFile</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/File -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/File">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/VariableType"/>
        <rdfs:label xml:lang="en">File</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/FileIntegrityMonitor -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/FileIntegrityMonitor">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/RuntimeException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/filePath"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/nodeIdentifier"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#ConnectedToHost"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;nodeIdentifier&quot;, &quot;filePath&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>fileIntegrityMonitor</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation>SP_fileintegritymonitor.txt</SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment xml:lang="throws runtimeexception does not currently throw">Set up file integrity monitoring
&lt;p&gt;Not yet implemented
@param nodeIdentifier identifier for node to set up FIM on
@param filePath path to monitor
@return false always
</rdfs:comment>
        <rdfs:label xml:lang="en">FileIntegrityMonitor</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/GetFile -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/GetFile">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/fileName"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/sensorId"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnLinux_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnOSX_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnWindows_LC"/>
        <SOAROntology:hasArgumentOrder>&quot;sensorId&quot;, &quot;fileName&quot;, outputFilePath&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>getFile</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation xml:lang="throws IOException if python script does not exist, throws exception
   */
  public File getFile(String sensorId, String filePath, String outputFilePath)
      throws IOException {

    // Check if given path represents a file
    File scriptFile = new File(scriptPath);
    if (!scriptFile.exists() || !scriptFile.isFile()) {
      throw new FileNotFoundException(scriptPath);
    }

    // joins the given strings and separates them with the give delimiter
    String args =
        String.join(
            &quot; &quot;,
            &quot;-o &quot; + this.getOID(),
            &quot;-a &quot; + this.getAPI_KEY(),
            &quot;-s &quot; + sensorId,
            &quot;-c file_get&quot;,
            &quot;-args file_path=&quot; + filePath,
            &quot; output_file_path=&quot; + outputFilePath);

    executeScript(args);

    // check if the retreived file exists, otherwise throw exception
    Path s = Paths.get(filePath);
    File f = new File(outputFilePath + s.getFileName());
    if (!f.exists() || !f.isFile()) {
      throw new FileNotFoundException(&quot;Output file not found: &quot; + scriptPath);
    }

    return f;
  }">/**
   * Method to get a file from a node.
   * Uses the python script to call the correct command to get the file from a sensor.
   *
   * @param sensorId SID of the sensor to which command needs to be send
   * @param filePath path of the file on endpoint which needs to be deleted
   * @param outputFilePath Must be an absolute path to directory where fetched file is saved
   * @return return the File if found, else return null
   * </SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>File</SOAROntology:hasOutputType>
        <rdfs:comment>Gets a file from an endpoint

-identifier: identifies the endpoint
-fileName: name of file to get
-outputFile:  ? doesn’t say
-returns: the file [Java ‘File’ object]</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string">GetFile</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/GetFileInfo -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/GetFileInfo">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/fileName"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/sensorId"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnLinux_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnOSX_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnWindows_LC"/>
        <webprotege:hasReturnType rdf:resource="http://webprotege.stanford.edu/String"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;sensorId&quot;, &quot;fileName&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>getFileInfo</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation xml:lang="throws IOException if scriptPath does not exist
   */
  public String getFileInfo(String sensorId, String fileName) throws IOException {
    // Check if given path represents a file
    File scriptFile = new File(scriptPath);
    if (!scriptFile.exists() || !scriptFile.isFile()) {
      throw new FileNotFoundException(scriptPath);
    }

    // joins the given strings and separates them with the give delimiter
    String args =
        String.join(
            &quot; &quot;,
            &quot;-o &quot; + this.getOID(),
            &quot;-a &quot; + this.getAPI_KEY(),
            &quot;-s &quot; + sensorId,
            &quot;-c file_info&quot;,
            &quot;-args file_path=&quot; + fileName);

    // File information will be the first line printed and information is only request for one file
    return executeScript(args).get(0);
  }">/**
   * Gets information about file
   * It is able to get the file information by using the Python script with the correct arguments
   * The information is then returned as String that is a JSON representation of the file
   * information.
   *
   * @param sensorId used to identify the node to get file information from
   * @param fileName name of file to get the file information from
   * @return string that has information about file, else return &quot;fail&quot;
   * </SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>String</SOAROntology:hasOutputType>
        <rdfs:comment>Gets info on a file from an endpoint

-identifier: identifies the endpoint
-filename: the file whose info is pulled
-returns: file info as a string</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string">GetFileInfo</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/GetProcess -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/GetProcess">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FileNotFoundException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/sensorId"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnLinux_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnOSX_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnWindows_LC"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;sensorId&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>getProcesses</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation xml:lang="throws FileNotFoundException if python script does not exist, throw exception
   */
  public List&lt;String&gt; getProcesses(String sensorId) throws FileNotFoundException {
    // Check if given path represents a file
    File scriptFile = new File(scriptPath);
    if (!scriptFile.exists() || !scriptFile.isFile()) {
      throw new FileNotFoundException(scriptPath);
    }

    // joins the given strings and separates them with the give delimiter
    String args =
        String.join(
            &quot; &quot;,
            &quot;-o &quot; + this.getOID(),
            &quot;-a &quot; + this.getAPI_KEY(),
            &quot;-s &quot; + sensorId,
            &quot;-c os_processes&quot;);

    return executeScript(args);
  }">/**
   * Method that gets a list of processes running from a node
   * The list of processes on a sensor are found by calling the correct
   * python script that sends the command to LimaCharlie and returns the processes
   * as a List of Strings where each String is a JSON representation of the process.
   *
   * @param sensorId identifier of node to get the list of processes from
   * @return the list of processes running on the given node
   * </SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>List&lt;String&gt;</SOAROntology:hasOutputType>
        <rdfs:comment>Lists all running processes on endpoint

-identifier: identifies the endpoint
-returns: list of running processes</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string">GetProcess</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/Host -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/Host">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">Host</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/IOException -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/IOException">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/FunctionException"/>
        <rdfs:label xml:lang="en">IOException</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/IllegalArgumentException -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/IllegalArgumentException">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/FunctionException"/>
        <rdfs:label xml:lang="en">IllegalArgumentException</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/Int -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/Int">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/VariableType"/>
        <rdfs:label xml:lang="en">Int</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/IsolateNode -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/IsolateNode">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/sensorId"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnOSX_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnWindows_LC"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;sensorId&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>python lc.py segregate_network $sensorId</SOAROntology:hasCommand>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment>Isolates an endpoint from a network. The targeted node should no longer be able to connect to the network. 

-identifier: identifies the endpoint
-Returns: true if successful, else false</rdfs:comment>
        <rdfs:label xml:lang="en">IsolateNode</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/KillProcess -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/KillProcess">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/pid"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/sensorId"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnLinux_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnOSX_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnWindows_LC"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;sensorId&quot;, &quot;pid&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>python lc.py &quot;os_kill_process -p $pid&quot; $sensorId</SOAROntology:hasCommand>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment># Send kill_process command to LimaCharlie
# Kills process with process id pid on sensor with sensor_id</rdfs:comment>
        <rdfs:comment>Kills a process on an endpoint

-identifier: identifies the endpoint
-pid: id of process to kill 
-returns: true if successful, else false</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string">KillProcess</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/LimaCharlie -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/LimaCharlie">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#EDR"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/DeleteFile"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/GetFile"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/GetFileInfo"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/GetProcess"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/IsolateNode"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/KillProcess"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/NewDetectionRule"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/RejoinNode"/>
        <rdfs:label xml:lang="en">LimaCharlie</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/ListString -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/ListString">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/VariableType"/>
        <rdfs:label xml:lang="en">ListString</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/LogManagement -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/LogManagement">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IllegalArgumentException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/filePath"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/format"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/sinkhole"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/toolFrom"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;filePath&quot;, &quot;format&quot;, &quot;toolFrom&quot;, &quot;sinkhole&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>logManagement</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation xml:lang="Override
  public boolean logManagement(String filePath, String format, String toolFrom, boolean sinkhole)
      throws IOException {
    // Ensure filePath exists, throw exception if not found
    File logFile = new File(filePath);
    if (!logFile.exists()) {
      throw new FileNotFoundException(filePath);
    }
    // Ensure filePath is readable
    if (!logFile.canRead()) {
      throw new IOException();
    }

    String indexName = toolFrom + &quot;_index&quot;;
    String srcType = &apos;_&apos; + format.toLowerCase();

    // Get index for toolFrom, if it doesn&apos;t exist, create one
    Index toolIndex = service.getIndexes().get(indexName);
    if (toolIndex == null) {
      toolIndex = service.getIndexes().create(indexName);
    }

    // Set sourcetype for data
    Args indexArgs = new Args();
    indexArgs.put(&quot;sourcetype&quot;, srcType);
    toolIndex.upload(filePath, indexArgs);

    // Add new index to list of default searchable indexes for admin role
    Role role = service.getRoles().get(&quot;admin&quot;);
    String[] defaults = role.getSearchIndexesDefault();
    String[] newDefaults = new String[defaults.length + 1];
    for (int i = 0; i &lt; defaults.length; i++) {
      if (defaults[i].equals(indexName)) {
        return true;
      }
      newDefaults[i] = defaults[i];
    }
    newDefaults[defaults.length] = indexName;
    role.setSearchIndexesDefault(newDefaults);

    if (sinkhole) {
      if (!logFile.delete()) {
        throw new IOException(
            &quot;Failed to delete log file after uploading, file: &quot; + logFile.getPath());
      }
    }

    return true;
}">/**
   * Upload log file to Splunk
   *
   * &lt;p&gt;Uploads log file found at passed filePath to Splunk using toolFrom to determine output
   * format and index to upload to. Can use sinkhole argument to delete file after uploading.
   *
   * @param filePath String of path to log file to be uploaded
   * @param format String of log format, e.g. &quot;json&quot;
   * @param toolFrom String of tool name
   * @param sinkhole boolean, true: delete file after uploading, false: don&apos;t delete file after
   *     uploading
   * @return true if successfully uploaded log file
   * @throws IOException when filePath does not exist, cannot be read, or cannot be deleted if
   *     sinkhole set to true
   */
  </SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment xml:lang="throws ioexception when filepath does not exist, cannot be read, or cannot be deleted if sinkhole set to true">Upload log file to Splunk
Uploads log file found at passed filePath to Splunk using toolFrom to determine output
format and index to upload to. Can use sinkhole argument to delete file after uploading.
@param filePath String of path to log file to be uploaded
 @param format String of log format, e.g. &quot;json&quot;
*@param toolFrom String of tool name
* @param sinkhole boolean, true: delete file after uploading, false: don&apos;t delete file after uploading
* @return true if successfully uploaded log file
* </rdfs:comment>
        <rdfs:label xml:lang="en">LogManagement</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/LogPath -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/LogPath">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">LogPath</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/MISP -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/MISP">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#MISP"/>
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#OSINT"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/ClassifierPredict"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/ClassifierTrain"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/NewDetectionRule -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/NewDetectionRule">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/rule"/>
        <SOAROntology:hasCommand>newDetectionRule</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation xml:lang="throws IOException if python script cannot be found.
   */
  public boolean newDetectionRule(String rule) throws IOException {
    return false;
  }">/**
   * Method used to create a new detection rule
   * CURRENTLY NOT FUNCTIONING
   * @param rule rule is represented as a String
   * @return true if command sent successfully, else returns false
   * </SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment>* Is actually a EDR  function, even though it sounds like a SIEM functionn *

Creates a new detection rule. Detection rules wait for particular events to happen and respond to them.

-rule: a detection rule to be added
-returns: true if successful, else false</rdfs:comment>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string">NewDetectionRule</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/Password -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/Password">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">Password</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/Port -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/Port">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/Int"/>
        <rdfs:label xml:lang="en">Port</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/RejoinNode -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/RejoinNode">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IOException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/sensorId"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnOSX_LC"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/worksOnWindows_LC"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;sensorId&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>rejoinNode</SOAROntology:hasCommand>
        <SOAROntology:hasImplementation xml:lang="throws IOException if python script does not exist, throws exception
   */
  public boolean rejoinNode(String sensorId) throws IOException {
    // Check if given path represents a file
    File scriptFile = new File(scriptPath);
    if (!scriptFile.exists() || !scriptFile.isFile()) {
      throw new FileNotFoundException(scriptPath);
    }

    // joins the given strings and separates them with the give delimiter
    String args =
        String.join(
            &quot; &quot;,
            &quot;-o &quot; + this.getOID(),
            &quot;-a &quot; + this.getAPI_KEY(),
            &quot;-s &quot; + sensorId,
            &quot;-c rejoin_network&quot;);

    ArrayList&lt;String&gt; ret = executeScript(args);
    return ret.contains(&quot;True&quot;);
  }">/**
   * Method used to allow node to rejoin the network
   * Tells the sensor to allow network connectivity again (after it was segregated).
   * Achieves this by calling the correct python script.
   *
   * @param sensorId sensorId of the node to be reconnected to the network
   * @return true if command sent successfully, else return false
   * </SOAROntology:hasImplementation>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment>(If node has been isolated from network) allows node to rejoin network

-identifier: identifies the endpoint
-Returns: true if successful, else false</rdfs:comment>
        <rdfs:label xml:lang="en">RejoinNode</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/RunReport -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/RunReport">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <webprotege:hasException rdf:resource="http://webprotege.stanford.edu/IllegalArgumentException"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/searchName"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/triggerActions"/>
        <SOAROntology:hasArgumentOrder rdf:datatype="http://webprotege.stanford.edu/project/SOAROntology#stringArray">&quot;searchName&quot;, &quot;triggerActions&quot;</SOAROntology:hasArgumentOrder>
        <SOAROntology:hasCommand>runReport</SOAROntology:hasCommand>
        <SOAROntology:hasOutputType>boolean</SOAROntology:hasOutputType>
        <rdfs:comment xml:lang="return returns true if search was successfully found, dispatched and completed. returns false otherwise.">Dispatches Splunk saved search and waits for it to complete. Does not handle results of saved search and assumes it has appropriate alert actions in place that will trigger when search is run. Saved Searches can be either Splunk reports or alerts, and either can be run
* @param searchName String for the name of search to execute. Name of search must match a saved
* search that already exists in relevant Splunk instance.
* @param triggerActions boolean whether to trigger actions linked to search; true to trigger
* actions, false to not trigger actions.
* </rdfs:comment>
        <rdfs:label xml:lang="en">RunReport</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/RuntimeException -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/RuntimeException">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/FunctionException"/>
        <rdfs:label xml:lang="en">RuntimeException</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/Splunk -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/Splunk">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#SIEM"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/Connect"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/Correlate"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/FileIntegrityMonitor"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/LogManagement"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/RunReport"/>
        <webprotege:hasFunctionalRequirement rdf:resource="http://webprotege.stanford.edu/UploadFile"/>
        <webprotege:hasNonFuncRequirement rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#ConnectedToHost"/>
        <rdfs:label xml:lang="en">Splunk</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/String -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/String">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/VariableType"/>
        <rdfs:label xml:lang="en">String</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/StringArray -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/StringArray">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/VariableType"/>
        <rdfs:label xml:lang="en">StringArray</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/UploadFile -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/UploadFile">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#FunctionalCapability"/>
        <SOAROntology:hasCommand>~/Splunk/bin/splunk add oneshot $inputFilePath</SOAROntology:hasCommand>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/Username -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/Username">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">Username</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/boolean -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/boolean">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/VariableType"/>
        <rdfs:label xml:lang="en">boolean</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/dependent -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/dependent">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInput rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">dependent</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/fileName -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/fileName">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">fileName</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/filePath -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/filePath">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">filePath</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/format -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/format">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">format</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/independents -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/independents">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/StringArray"/>
        <rdfs:label xml:lang="en">independents</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/nodeIdentifier -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/nodeIdentifier">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">nodeIdentifier</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/pid -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/pid">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/Int"/>
        <rdfs:label xml:lang="en">pid</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/rule -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/rule">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">rule</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/searchName -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/searchName">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">searchName</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/sensorId -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/sensorId">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label xml:lang="en">sensorId</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/sinkhole -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/sinkhole">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/boolean"/>
        <rdfs:label xml:lang="en">sinkhole</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/toolFrom -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/toolFrom">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/String"/>
        <rdfs:label rdf:datatype="http://www.w3.org/2001/XMLSchema#string">toolFrom</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/triggerActions -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/triggerActions">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/InputOutput"/>
        <webprotege:hasInputType rdf:resource="http://webprotege.stanford.edu/boolean"/>
        <rdfs:label xml:lang="en">triggerActions</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/worksOnLinux_LC -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/worksOnLinux_LC">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#OperatingSystem"/>
        <rdfs:label xml:lang="en">worksOnLinux_LC</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/worksOnOSX_LC -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/worksOnOSX_LC">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#OperatingSystem"/>
        <rdfs:label xml:lang="en">worksOnOSX_LC</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/worksOnWindows_LC -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/worksOnWindows_LC">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#OperatingSystem"/>
        <rdfs:label xml:lang="en">worksOnWindows_LC</rdfs:label>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#CollectSnortAlertLog -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#CollectSnortAlertLog">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#CollectAlertLog"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#ConnectedToHost -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#ConnectedToHost">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Network"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#DetectMaliciousTraffic -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#DetectMaliciousTraffic"/>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#FileNotFoundException -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#FileNotFoundException">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/FunctionException"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedEndpoint -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedEndpoint">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedSystem"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedHost -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedHost">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedSystem"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedIp -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedIp">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#IdentifyAffectedSystem"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#JsonSyntaxException -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#JsonSyntaxException">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/FunctionException"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#OS -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#OS">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/NonFuncRequirement"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#PaloAltoFirewall_p -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#PaloAltoFirewall_p">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#PaloAltoFirewall"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#SnortInstance -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#SnortInstance">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Snort"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#SnortInstanceRouter -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#SnortInstanceRouter">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Snort"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Snort_s -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Snort_s">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Snort"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Splunk -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Splunk">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Splunk"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#Wireshark_w -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#Wireshark_w">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Wireshark"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#limaCharlie_l -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#limaCharlie_l">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#LimaCharlie"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#splunk_s -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#splunk_s">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#Splunk"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#winPcap -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#winPcap">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#PacketCapture"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#windowDefender_w -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#windowDefender_w">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#WindowDefender"/>
    </owl:NamedIndividual>
    


    <!-- http://webprotege.stanford.edu/project/SOAROntology#winpcap_w -->

    <owl:NamedIndividual rdf:about="http://webprotege.stanford.edu/project/SOAROntology#winpcap_w">
        <rdf:type rdf:resource="http://webprotege.stanford.edu/project/SOAROntology#WinPcap"/>
    </owl:NamedIndividual>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // General axioms
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <rdf:Description>
        <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#AllDisjointClasses"/>
        <owl:members rdf:parseType="Collection">
            <rdf:Description rdf:about="http://webprotege.stanford.edu/project/SOAROntology#EDR"/>
            <rdf:Description rdf:about="http://webprotege.stanford.edu/project/SOAROntology#MISP"/>
            <rdf:Description rdf:about="http://webprotege.stanford.edu/project/SOAROntology#SIEM"/>
        </owl:members>
    </rdf:Description>
</rdf:RDF>



<!-- Generated by the OWL API (version 4.2.8.20170104-2310) https://github.com/owlcs/owlapi -->

